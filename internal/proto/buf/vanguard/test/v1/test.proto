// Copyright 2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package buf.vanguard.test.v1;

import "google/api/annotations.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

message ParameterValues {
  // scalar types
  double double_value = 1;
  float float_value = 2;
  int32 int32_value = 3;
  int64 int64_value = 4;
  uint32 uint32_value = 5;
  uint64 uint64_value = 6;
  sint32 sint32_value = 7;
  sint64 sint64_value = 8;
  fixed32 fixed32_value = 9;
  fixed64 fixed64_value = 10;
  sfixed32 sfixed32_value = 11;
  sfixed64 sfixed64_value = 12;
  bool bool_value = 13;
  string string_value = 14;
  bytes bytes_value = 15;

  // scalar wrappers
  google.protobuf.Timestamp timestamp = 16;
  google.protobuf.Duration duration = 17;
  google.protobuf.BoolValue bool_value_wrapper = 18;
  google.protobuf.Int32Value int32_value_wrapper = 19;
  google.protobuf.Int64Value int64_value_wrapper = 20;
  google.protobuf.UInt32Value uint32_value_wrapper = 21;
  google.protobuf.UInt64Value uint64_value_wrapper = 22;
  google.protobuf.FloatValue float_value_wrapper = 23;
  google.protobuf.DoubleValue double_value_wrapper = 24;
  google.protobuf.BytesValue bytes_value_wrapper = 25;
  google.protobuf.StringValue string_value_wrapper = 26;
  google.protobuf.FieldMask field_mask = 27;

  // enum types
  enum Enum {
    ENUM_UNSPECIFIED = 0;
    ENUM_VALUE = 1;
  }
  Enum enum_value = 28;

  // complex types
  repeated Enum enum_list = 29;
  repeated double double_list = 30;
  repeated google.protobuf.DoubleValue double_value_list = 31;
  oneof oneof {
    double oneof_double_value = 33;
    google.protobuf.DoubleValue oneof_double_value_wrapper = 34;
    Enum oneof_enum_value = 35;
  }
  message Nested {
    double double_value = 1;
    google.protobuf.DoubleValue double_value_wrapper = 2;
    enum Enum {
      ENUM_UNSPECIFIED = 0;
      ENUM_VALUE = 1;
    }
    Enum enum_value = 3;
  }
  Nested nested = 36;
  ParameterValues recursive = 37;

  // unsupported
  map<string, string> string_map = 38;
  map<string, google.protobuf.StringValue> string_value_map = 39;
  map<string, Enum> enum_map = 40;
  map<string, Nested> nested_map = 41;
  google.protobuf.Struct struct_value = 42;
  google.protobuf.Value value = 43;
  repeated ParameterValues recursive_list = 44;
}
